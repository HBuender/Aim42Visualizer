/*
 * generated by Xtext 2.17.0
 */
package de.itemis.iap.tests

import com.google.inject.Inject
import de.itemis.iap.iAPDSL.Model
import org.eclipse.xtext.testing.InjectWith
import org.eclipse.xtext.testing.extensions.InjectionExtension
import org.eclipse.xtext.testing.util.ParseHelper
import static extension org.junit.jupiter.api.Assertions.*
import org.junit.jupiter.api.Test
import org.junit.jupiter.api.^extension.ExtendWith
import static extension org.junit.Assert.assertNotNull

@ExtendWith(InjectionExtension)
@InjectWith(IAPDSLInjectorProvider)
class IAPDSLParsingTest {
	@Inject
	extension ParseHelper<Model>  parseHelper
	
	@Test
	def void parseEmptyModel() {
		''''''.assertNoParsingOrValidationErrors
	}
	
	@Test
	def void parseSingleIssue() {
		'''
		issue sample
		'''.assertNoParsingOrValidationErrors
	}
	
	@Test
	def void parseSingleIssueWithDocumentation() {
		'''
		issue sample "This is a sample issue"
		'''.assertNoParsingOrValidationErrors
	}
	
	@Test
	def void parseSingleIssueAndImprovement() {
		'''
		issue sample "This is a sample issue"
		improvement sampleImprovement
		'''.assertNoParsingOrValidationErrors
	}
	
	@Test
	def void parseSingleIssueAndImprovementLinked() {
		'''
		issue sample "This is a sample issue"
		improvements sampleImprovement
		improvement sampleImprovement
		'''.assertNoParsingOrValidationErrors
	}
	
	
	
	
	def assertNoParsingOrValidationErrors(CharSequence it){
		val result=parse
		result.assertNotNull
		val errors = result.eResource.errors
		assertTrue(errors.isEmpty, '''Unexpected errors: «errors.join(", ")»''')
	}
}
